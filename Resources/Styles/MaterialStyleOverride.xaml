<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:a="clr-namespace:UraniumUI.Material.Attachments;assembly=UraniumUI.Material"
    xmlns:c="clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material"
    xmlns:input="clr-namespace:InputKit.Shared.Controls;assembly=InputKit.Maui"
    xmlns:t="clr-namespace:UraniumUI.Theming;assembly=UraniumUI"
    xmlns:views="clr-namespace:UraniumUI.Views;assembly=UraniumUI">
    <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>

            <ResourceDictionary Source="MaterialColorOverride.xaml" />

            <ResourceDictionary>

                <Style ApplyToDerivedTypes="True" TargetType="Page">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}" />
                </Style>

                <Style ApplyToDerivedTypes="True" TargetType="Label">
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnBackground}, Dark={StaticResource OnBackgroundDark}}" />
                </Style>

                <Style ApplyToDerivedTypes="True" TargetType="Frame">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Surface}, Dark={StaticResource SurfaceDark}}" />
                </Style>

                <Shadow
                    x:Key="ShadowElevation0"
                    Brush="{StaticResource ShadowBrush}"
                    Opacity="0"
                    Radius="0"
                    Offset="0,0" />
                <Shadow
                    x:Key="ShadowElevation1"
                    Brush="{StaticResource ShadowBrush}"
                    Opacity="0.2"
                    Radius="4"
                    Offset="2,2" />
                <Shadow
                    x:Key="ShadowElevation2"
                    Brush="{StaticResource ShadowBrush}"
                    Opacity="0.4"
                    Radius="8"
                    Offset="4,4" />
                <Shadow
                    x:Key="ShadowElevation3"
                    Brush="{StaticResource ShadowBrush}"
                    Opacity="0.6"
                    Radius="12"
                    Offset="6,6" />
                <Shadow
                    x:Key="ShadowElevation4"
                    Brush="{StaticResource ShadowBrush}"
                    Opacity="0.6"
                    Radius="16"
                    Offset="8,8" />
                <Shadow
                    x:Key="ShadowElevation5"
                    Brush="{StaticResource ShadowBrush}"
                    Opacity="0.8"
                    Radius="20"
                    Offset="10,10" />

                <Style
                    ApplyToDerivedTypes="True"
                    Class="Elevation0"
                    TargetType="View">
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation0}" />
                </Style>
                <Style
                    ApplyToDerivedTypes="True"
                    Class="Elevation1"
                    TargetType="View">
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation1}" />
                </Style>
                <Style
                    ApplyToDerivedTypes="True"
                    Class="Elevation2"
                    TargetType="View">
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation2}" />
                </Style>
                <Style
                    ApplyToDerivedTypes="True"
                    Class="Elevation3"
                    TargetType="View">
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation3}" />
                </Style>
                <Style
                    ApplyToDerivedTypes="True"
                    Class="Elevation4"
                    TargetType="View">
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation3}" />
                </Style>
                <Style
                    ApplyToDerivedTypes="True"
                    Class="Elevation5"
                    TargetType="View">
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation3}" />
                </Style>

                <Style x:Key="BaseButtonStyle" TargetType="Button">
                    <Setter Property="CornerRadius" Value="20" />
                    <Setter Property="HeightRequest" Value="40" />
                    <Setter Property="Padding" Value="24,0" />
                </Style>

                <Style BaseResourceKey="BaseButtonStyle" TargetType="Button" />

                <Style
                    BaseResourceKey="BaseButtonStyle"
                    Class="ElevatedButton"
                    TargetType="Button">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource OnPrimary}, Dark={StaticResource OnPrimaryDark}}" />
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation1}" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Property="Shadow" Value="{StaticResource ShadowElevation0}" />
                                        <Setter Property="TextColor" Value="{StaticResource DisabledText}" />
                                        <Setter Property="BackgroundColor" Value="{StaticResource DisabledBackground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Hover">
                                    <VisualState.Setters>
                                        <Setter Property="Shadow" Value="{StaticResource ShadowElevation2}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Property="Shadow" Value="{StaticResource ShadowElevation0}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style
                    BaseResourceKey="BaseButtonStyle"
                    Class="FilledButton"
                    TargetType="Button">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnPrimary}, Dark={StaticResource OnPrimaryDark}}" />
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation0}" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Hover">
                                    <VisualState.Setters>
                                        <Setter Property="Shadow" Value="{StaticResource ShadowElevation1}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor" Value="{StaticResource DisabledText}" />
                                        <Setter Property="BackgroundColor" Value="{StaticResource DisabledBackground}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style
                    BaseResourceKey="BaseButtonStyle"
                    Class="FilledTonalButton"
                    TargetType="Button">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SecondaryContainer}, Dark={StaticResource SecondaryContainerDark}}" />
                    <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="1" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnSecondaryContainer}, Dark={StaticResource OnSecondaryContainerDark}}" />
                    <Setter Property="Shadow" Value="{StaticResource ShadowElevation0}" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor" Value="{StaticResource DisabledText}" />
                                        <Setter Property="BackgroundColor" Value="{StaticResource DisabledBackground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Hover">
                                    <VisualState.Setters>
                                        <Setter Property="Shadow" Value="{StaticResource ShadowElevation1}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.8" />
                                        <Setter Property="Shadow" Value="{StaticResource ShadowElevation0}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style
                    BaseResourceKey="BaseButtonStyle"
                    Class="OutlinedButton"
                    TargetType="Button">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0" />
                    <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource Outline}, Dark={StaticResource OutlineDark}}" />
                    <Setter Property="BorderWidth" Value="1" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0" />
                                        <Setter Property="TextColor" Value="{StaticResource Gray300}" />
                                        <Setter Property="BorderColor" Value="{StaticResource Gray100}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Hover">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.16" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style
                    BaseResourceKey="BaseButtonStyle"
                    Class="TextButton"
                    TargetType="Button">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0" />
                    <Setter Property="BorderWidth" Value="0" />
                    <Setter Property="Margin" Value="0,2" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0" />
                                        <Setter Property="TextColor" Value="{StaticResource DisabledText}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Hover">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.16" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style Class="Divider" TargetType="BoxView">
                    <Setter Property="HeightRequest" Value="1" />
                    <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource OutlineVariant}, Dark={StaticResource OutlineVariantDark}}" />
                    <Setter Property="Margin" Value="16,8" />
                </Style>

                <Style ApplyToDerivedTypes="True" TargetType="input:CheckBox">
                    <Setter Property="Type" Value="Material" />
                    <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource Outline}, Dark={StaticResource OutlineDark}}" />
                    <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnBackground}, Dark={StaticResource OnBackgroundDark}}" />
                    <Setter Property="ValidationColor" Value="{AppThemeBinding Light={StaticResource Error}, Dark={StaticResource ErrorDark}}" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="0.6" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style ApplyToDerivedTypes="True" TargetType="input:RadioButton">
                    <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnBackground}, Dark={StaticResource OnBackgroundDark}}" />
                    <Setter Property="CircleColor" Value="{AppThemeBinding Light={StaticResource Outline}, Dark={StaticResource OutlineDark}}" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="0.6" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style Class="CheckRadioButton" TargetType="c:RadioButton">
                    <Setter Property="SelectedIconGeomerty" Value="{x:Static input:PredefinedShapes.CheckCircle}" />
                </Style>

                <Style TargetType="a:BottomSheetView">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Surface}, Dark={StaticResource SurfaceDark}}" />
                </Style>

                <Style TargetType="a:BackdropView">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Gray950}}" />
                </Style>

                <Style TargetType="c:DataGrid">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Surface}, Dark={StaticResource SurfaceDark}}" />
                    <Setter Property="LineSeperatorColor" Value="{StaticResource Gray300}" />
                    <Setter Property="SelectionColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                </Style>

                <Style
                    x:Key="InputFieldBaseStyle"
                    ApplyToDerivedTypes="True"
                    TargetType="c:InputField">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="AccentColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource OnBackground}, Dark={StaticResource OnBackgroundDark}}" />
                    <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource OnBackground}, Dark={StaticResource OnBackgroundDark}}" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="0.6" />
                                        <Setter Property="BorderColor" Value="{StaticResource DisabledText}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style
                    ApplyToDerivedTypes="True"
                    BaseResourceKey="InputFieldBaseStyle"
                    TargetType="c:InputField" />

                <Style BaseResourceKey="InputFieldBaseStyle" TargetType="c:TextField">
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnBackground}, Dark={StaticResource OnBackgroundDark}}" />
                </Style>

                <Style BaseResourceKey="InputFieldBaseStyle" TargetType="c:AutoCompleteTextField">
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnBackground}, Dark={StaticResource OnBackgroundDark}}" />
                </Style>

                <Style ApplyToDerivedTypes="True" TargetType="views:StatefulContentView">
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="0.8" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="1.0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="0.5" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style ApplyToDerivedTypes="True" TargetType="c:ButtonView">
                    <Setter Property="BackgroundColor" Value="Transparent" />
                    <Setter Property="Background" Value="{StaticResource PrimaryGradientBrush}" />
                    <Setter Property="StrokeShape" Value="{RoundRectangle CornerRadius=20}" />
                    <Setter Property="t:CascadingStyle.Resources">
                        <Setter.Value>
                            <ResourceDictionary>
                                <Style TargetType="Label">
                                    <Setter Property="TextColor" Value="White" />
                                </Style>
                            </ResourceDictionary>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.9" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.8" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style Class="TreeViewExpandButton" TargetType="c:ButtonView">
                    <Setter Property="BackgroundColor" Value="Transparent" />
                    <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource PrimaryGradientBrush}, Dark={StaticResource PrimaryDark}}" />
                    <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0" />
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Property="t:DynamicTint.BackgroundColorOpacity" Value="0.15" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>

                <Style
                    ApplyToDerivedTypes="True"
                    Class="PrimaryContainer"
                    TargetType="View">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryContainer}, Dark={StaticResource PrimaryContainerDark}}" />
                    <Setter Property="t:CascadingStyle.Resources">
                        <ResourceDictionary>
                            <Style TargetType="Label">
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnPrimaryContainer}, Dark={StaticResource OnPrimaryContainerDark}}" />
                            </Style>
                        </ResourceDictionary>
                    </Setter>
                </Style>

                <Style
                    ApplyToDerivedTypes="True"
                    Class="SecondaryContainer"
                    TargetType="View">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SecondaryContainer}, Dark={StaticResource SecondaryContainerDark}}" />
                    <Setter Property="t:CascadingStyle.Resources">
                        <ResourceDictionary>
                            <Style TargetType="Label">
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnSecondaryContainer}, Dark={StaticResource OnSecondaryContainerDark}}" />
                            </Style>
                        </ResourceDictionary>
                    </Setter>
                </Style>

                <Style
                    ApplyToDerivedTypes="True"
                    Class="TertiaryContainer"
                    TargetType="View">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource TertiaryContainer}, Dark={StaticResource TertiaryContainerDark}}" />
                    <Setter Property="t:CascadingStyle.Resources">
                        <ResourceDictionary>
                            <Style TargetType="Label">
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnTertiaryContainer}, Dark={StaticResource OnTertiaryContainerDark}}" />
                            </Style>
                        </ResourceDictionary>
                    </Setter>
                </Style>

                <Style
                    ApplyToDerivedTypes="True"
                    Class="ErrorContainer"
                    TargetType="View">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ErrorContainer}, Dark={StaticResource ErrorContainerDark}}" />
                    <Setter Property="t:CascadingStyle.Resources">
                        <ResourceDictionary>
                            <Style TargetType="Label">
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OnErrorContainer}, Dark={StaticResource OnErrorContainerDark}}" />
                            </Style>
                        </ResourceDictionary>
                    </Setter>
                </Style>

            </ResourceDictionary>

        </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
</ResourceDictionary>